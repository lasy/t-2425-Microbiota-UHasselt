),
rowData =
LLD_raw |> rowData() |>
as.data.frame() |>
mutate(
phylum =
ifelse(
is.na(phylum) & (species == "Blastocystis sp. subtype 1"),
"Bigyra", phylum
)
),
colData = LLD_raw |> colData() |> as.data.frame()
)
#| echo: true
selected_samples <- LLD_full |> colnames() |> sample(subset_size)
LLD <- LLD_full[, selected_samples]
LLD_summary <-
LLD |>
as_tibble() |>
group_by(.feature) |>
summarize(
n_samples = sum(counts > 0),
prevalence = n_samples/n(),
mean_rel_ab = mean(rel_ab),
max_rel_ab = max(rel_ab)
)
#| fig-height: 4
#| fig-width: 6
LLD_summary |>
ggplot() +
aes(x = max_rel_ab, y = prevalence, label = .feature) +
geom_hline(yintercept = min_prevalence, linetype = "dashed") +
geom_vline(xintercept = min_max_rel_ab, linetype = "dashed") +
geom_point(size = 3, alpha = 0.25) +
scale_x_log10("Max. relative abundance across samples") +
scale_y_log10("Prevalence\n(fraction of samples where taxa is present)") +
labs(caption = "Each dot is a taxon")
included_taxa <-
LLD_summary |>
filter(max_rel_ab > min_max_rel_ab, prevalence > min_prevalence) |>
pull(.feature)
LLD <- LLD[included_taxa, ]
alpha_diversity <-
bind_rows(
tibble(
sample = colnames(isala),
shannon_index = isala |> assay("counts") |> t() |> vegan::diversity(, index = "shannon") |> as.vector(),
dataset = "ISALA (vag. swabs)"
),
tibble(
sample = colnames(LLD),
shannon_index = LLD |> assay("counts") |> t() |> vegan::diversity(, index = "shannon") |> as.vector(),
dataset = "LifeLineDeep (stool)"
)
)
#| fig-height: 4
alpha_diversity |>
ggplot() +
aes(x = shannon_index, fill = dataset) +
geom_histogram(binwidth = 0.05) +
ylab("Number of samples") +
xlab("alpha-diversity\n(Shannon index computed on taxa counts)") +
facet_grid(dataset ~ .) +
scale_fill_manual(values = dataset_colors)
beta_diversity <-
bind_rows(
isala |> assay("rel_ab") |> t() |>
vegan::vegdist(method = "bray") |>
as.matrix() |> as.data.frame() |> rownames_to_column("sample 1") |>
pivot_longer(-"sample 1", names_to = "sample 2", values_to = "BC") |>
mutate(
`sample 1` = `sample 1` |> fct_inorder(),
`sample 2` = `sample 2` |> factor(levels = `sample 1` |> levels())
) |>
filter(as.numeric(`sample 1`) < as.numeric(`sample 2`)) |>
mutate(dataset = "ISALA (vag. swabs)"),
LLD |> assay("rel_ab") |> t() |>
vegan::vegdist(method = "bray") |>
as.matrix() |> as.data.frame() |> rownames_to_column("sample 1") |>
pivot_longer(-"sample 1", names_to = "sample 2", values_to = "BC") |>
mutate(
`sample 1` = `sample 1` |> fct_inorder(),
`sample 2` = `sample 2` |> factor(levels = `sample 1` |> levels())
) |>
filter(as.numeric(`sample 1`) < as.numeric(`sample 2`)) |>
mutate(dataset = "LifeLineDeep (stool)")
)
#| fig-height: 4
beta_diversity |>
ggplot() +
aes(x = BC, fill = dataset) +
geom_histogram(binwidth = 0.05) +
ylab("Number of pairs") +
xlab("beta-diversity\n(Pairwise Bray-Curtis dissimilarities computed on taxa relative abundances)") +
facet_grid(dataset ~ .) +
scale_fill_manual(values = dataset_colors)
isala |>
mia::makePhyloseqFromTreeSE() |>
microViz::tax_transform("compositional", rank = "genus") |>
microViz::comp_heatmap(sample_ser_dist = "bray")
LLD |>
as_tibble() |>
ggplot() +
aes(x = .sample, y = .feature, alpha = rel_ab) +
geom_tile(fill = dataset_colors[2]) +
scale_alpha("Rel. abundance", range = c(0, 1)) +
scale_x_discrete("Sample", breaks = NULL) +
ylab("")
LLD |>
mia::makePhyloseqFromTreeSE() |>
microViz::tax_fix_interactive() |>
microViz::tax_transform("compositional", rank = "family") |>
microViz::comp_heatmap(sample_ser_dist = "bray")
LLD |>
mia::makePhyloseqFromTreeSE() |>
microViz::tax_fix() |>
microViz::tax_transform("compositional", rank = "family") |>
microViz::comp_heatmap(sample_ser_dist = "bray")
LLD |>
mia::makePhyloseqFromTreeSE() |>
microViz::tax_fix() |>
microViz::tax_transform("compositional", rank = "genus") |>
microViz::comp_heatmap(sample_ser_dist = "bray")
LLD |>
mia::makePhyloseqFromTreeSE() |>
microViz::tax_fix() |>
microViz::tax_transform("compositional", rank = "class") |>
microViz::comp_heatmap(sample_ser_dist = "bray")
LLD |>
mia::makePhyloseqFromTreeSE() |>
microViz::tax_fix() |>
microViz::tax_transform("compositional", rank = "family") |>
microViz::comp_heatmap(sample_ser_dist = "bray")
LLD
LLD |>
mia::makePhyloseqFromTreeSE() |>
microViz::tax_fix() |>
microViz::tax_transform("compositional", rank = "order") |>
microViz::comp_heatmap(sample_ser_dist = "bray")
LLD |>
mia::makePhyloseqFromTreeSE() |>
microViz::tax_fix() |>
microViz::tax_transform("compositional", rank = "order") |>
microViz::comp_heatmap(sample_ser_dist = "bray")
LLD |>
mia::makePhyloseqFromTreeSE() |>
microViz::tax_fix() |>
microViz::tax_transform("compositional", rank = "family") |>
microViz::comp_heatmap(sample_ser_dist = "bray")
isala |>
mia::makePhyloseqFromTreeSE() |>
microViz::tax_transform("compositional", rank = "genus") |>
microViz::comp_heatmap(sample_ser_dist = "bray")
isala_tax_raw |>
select(-sequence) |>
mutate(
last_available_level =
get_last_available_level(isala_tax_raw |> select(kingdom:genus)),
last_available_taxon =
get_last_available_taxon(isala_tax_raw |> select(kingdom:genus)) |>
str_remove("_[a-z]$") |>
str_remove(" group"),
taxon =
case_when(
(last_available_level == "genus") ~ last_available_taxon,
TRUE ~ str_c(last_available_taxon, " (", last_available_level |> str_sub(1,1) |> str_to_title(), ")")
)
)
isala_tax_raw |>
select(-sequence) |>
mutate(
last_available_level =
get_last_available_level(isala_tax_raw |> select(kingdom:genus)),
last_available_taxon =
get_last_available_taxon(isala_tax_raw |> select(kingdom:genus)) |>
str_remove("_[a-z]$") |>
str_remove(" group"),
taxon =
case_when(
(last_available_level == "genus") ~ last_available_taxon,
TRUE ~ str_c(last_available_taxon, " (", last_available_level |> str_sub(1,1) |> str_to_title(), ")")
)
) |> filter(str_detect(last_available_taxon, "Lactobacillus"))
isala_tax_raw |>
select(-sequence) |>
mutate(
genus = genus |> str_remove(" group"),
last_available_level =
get_last_available_level(isala_tax_raw |> select(kingdom:genus)),
last_available_taxon =
get_last_available_taxon(isala_tax_raw |> select(kingdom:genus)) |>
str_remove("_[a-z]$"),
taxon =
case_when(
(last_available_level == "genus") ~ last_available_taxon,
TRUE ~ str_c(last_available_taxon, " (", last_available_level |> str_sub(1,1) |> str_to_title(), ")")
)
)|> filter(str_detect(last_available_taxon, "Lactobacillus"))
isala_tax_raw |>
select(-sequence) |>
mutate(
genus = genus |> str_remove(" group"),
last_available_level =
get_last_available_level(isala_tax_raw |> select(kingdom:genus)),
last_available_taxon =
get_last_available_taxon(isala_tax_raw |> select(kingdom:genus)) |>
str_remove("_[a-z]$") |>
str_remove(" group"),
taxon =
case_when(
(last_available_level == "genus") ~ last_available_taxon,
TRUE ~ str_c(last_available_taxon, " (", last_available_level |> str_sub(1,1) |> str_to_title(), ")")
)
) |> filter(str_detect(last_available_taxon, "Lactobacillus"))
isala |>
mia::makePhyloseqFromTreeSE() |>
microViz::tax_transform("compositional", rank = "genus") |>
microViz::comp_heatmap(sample_ser_dist = "bray", taxa_ser_dist = "jaccard")
isala |>
mia::makePhyloseqFromTreeSE() |>
microViz::tax_transform("compositional", rank = "genus") |>
microViz::comp_heatmap(sample_ser_dist = "bray", taxa_ser_dist = "bray")
?comp_heatmap
isala |>
mia::makePhyloseqFromTreeSE() |>
microViz::tax_transform("compositional", rank = "genus") |>
microViz::comp_heatmap(sample_ser_dist = "bray", tax_ser_dist = "jaccard")
LLD |>
mia::makePhyloseqFromTreeSE() |>
microViz::tax_fix() |>
microViz::tax_transform("compositional", rank = "family") |>
microViz::comp_heatmap(sample_ser_dist = "bray", tax_ser_dist = "jaccard")
run_lda_models()
?run_lda_models()
library(topicmodels)
#| echo: true
# Most code is hidden by default; sometimes it can be revealed in the html as here.
library(tidyverse)
library(magrittr)
library(janitor, include.only = "clean_names")
library(SummarizedExperiment)
library(tidySummarizedExperiment)
library(microViz)
library(mia, include.only = "makePhyloseqFromTreeSE")
library(curatedMetagenomicData)
# library(phyloseq)
library(topicmodels)
library(alto) # devtools::install_github("lasy/alto")
theme_set(theme_light())
set.seed(1)
#| echo: true
# SummarizedExperiment object
#| echo: true
github_url <- "https://raw.githubusercontent.com/LebeerLab/Citizen-science-map-of-the-vaginal-microbiome/refs/heads/main/data/isala/"
isala_counts_raw <- read_tsv(file = str_c(github_url, "counts.tsv"))
isala_tax_raw <- read_tsv(file = str_c(github_url, "taxa_spec.tsv"))
isala_metadata_raw <- read_tsv(file = str_c(github_url, "metadata.tsv"))
#| echo: false
# SummarizedExperiment object
get_last_available_level <- function(tax){
tmp <- bind_cols(tibble("NA" = ""), tax)
colnames(tmp)[apply(tmp, 1, function(x) which(!is.na(x)) |> max())]
}
get_last_available_taxon <- function(tax){
tmp <- bind_cols(tibble("NA" = "?"), tax)
apply(tmp, 1, function(x) x[which(!is.na(x)) |> max()])
}
make_se_from_isala_raw <- function(isala_counts_raw, isala_tax_raw, isala_metadata_raw) {
# we create unique identifiers for the taxa (rowdata)
tax <-
isala_tax_raw |>
select(-sequence) |>
mutate(
genus = genus |> str_remove(" group"),
last_available_level =
get_last_available_level(isala_tax_raw |> select(kingdom:genus)),
last_available_taxon =
get_last_available_taxon(isala_tax_raw |> select(kingdom:genus)) |>
str_remove("_[a-z]$") |>
str_remove(" group"),
taxon =
case_when(
(last_available_level == "genus") ~ last_available_taxon,
TRUE ~ str_c(last_available_taxon, " (", last_available_level |> str_sub(1,1) |> str_to_title(), ")")
)
) |>
select(-last_available_taxon) |>
as.data.frame() |>
column_to_rownames(var = "taxon")
# sample information
metadata <-
isala_metadata_raw |>
clean_names() |>
select(
bio_sample_id,
general_age, health_bmi, health_antibiotic_3months, sexual_intercourse_24hours,
everything()
) |>
as.data.frame() |>
column_to_rownames(var = "bio_sample_id")
# count table
counts <-
isala_counts_raw |>
clean_names() |>
as.data.frame() |>
column_to_rownames(var = "bio_sample_id") |>
t()
counts <- counts[tax$taxon_id, ] |> set_rownames(rownames(tax))
counts <- counts[, rownames(metadata)]
SummarizedExperiment::SummarizedExperiment(
assays = list(counts = counts, rel_ab = t(t(counts)/colSums(counts))),
rowData = tax,
colData = metadata
)
}
#| echo: true
isala_full <-
make_se_from_isala_raw(
isala_counts_raw,
isala_tax_raw,
isala_metadata_raw
)
isala_full
subset_size <- 200
#| echo: true
selected_samples <- isala_full |> colnames() |> sample(subset_size)
isala <- isala_full[, selected_samples]
taxa_summary <-
isala |>
as_tibble() |>
group_by(.feature) |>
summarize(
n_samples = sum(counts > 0),
prevalence = n_samples/n(),
mean_rel_ab = mean(rel_ab),
max_rel_ab = max(rel_ab)
)
min_prevalence <- 5/100
min_max_rel_ab <- 1/1000
#| fig-height: 4
#| fig-width: 6
taxa_summary |>
mutate(`is Lacto` = str_detect(.feature, "Lactobacillus")) |>
ggplot() +
aes(x = max_rel_ab, y = prevalence, label = .feature, color = `is Lacto`) +
geom_hline(yintercept = min_prevalence, linetype = "dashed") +
geom_vline(xintercept = min_max_rel_ab, linetype = "dashed") +
geom_point(size = 3, alpha = 0.25) +
scale_x_log10("Max. relative abundance across samples") +
scale_y_log10("Prevalence\n(fraction of samples where taxa is present)") +
labs(caption = "Each dot is a taxon")
included_taxa <-
taxa_summary |>
filter(max_rel_ab > min_max_rel_ab, prevalence > min_prevalence) |>
pull(.feature)
isala <- isala[included_taxa, ]
LLD_raw <-
curatedMetagenomicData(
"LifeLinesDeep_2016.relative_abundance",
counts = TRUE,
dryrun = FALSE,
rownames = "short"
)[[1]]
tmp_counts <- LLD_raw |> assay("relative_abundance")
LLD_full <-
SummarizedExperiment(
assays =
list(
counts = tmp_counts,
rel_ab = t(t(tmp_counts)/colSums(tmp_counts))
),
rowData =
LLD_raw |> rowData() |>
as.data.frame() |>
mutate(
phylum =
ifelse(
is.na(phylum) & (species == "Blastocystis sp. subtype 1"),
"Bigyra", phylum
)
),
colData = LLD_raw |> colData() |> as.data.frame()
)
LLD_full
#| echo: true
selected_samples <- LLD_full |> colnames() |> sample(subset_size)
LLD <- LLD_full[, selected_samples]
LLD_summary <-
LLD |>
as_tibble() |>
group_by(.feature) |>
summarize(
n_samples = sum(counts > 0),
prevalence = n_samples/n(),
mean_rel_ab = mean(rel_ab),
max_rel_ab = max(rel_ab)
)
#| fig-height: 4
#| fig-width: 6
LLD_summary |>
ggplot() +
aes(x = max_rel_ab, y = prevalence, label = .feature) +
geom_hline(yintercept = min_prevalence, linetype = "dashed") +
geom_vline(xintercept = min_max_rel_ab, linetype = "dashed") +
geom_point(size = 3, alpha = 0.25) +
scale_x_log10("Max. relative abundance across samples") +
scale_y_log10("Prevalence\n(fraction of samples where taxa is present)") +
labs(caption = "Each dot is a taxon")
included_taxa <-
LLD_summary |>
filter(max_rel_ab > min_max_rel_ab, prevalence > min_prevalence) |>
pull(.feature)
LLD <- LLD[included_taxa, ]
dataset_colors <- c("steelblue", "indianred2")
alpha_diversity <-
bind_rows(
tibble(
sample = colnames(isala),
shannon_index = isala |> assay("counts") |> t() |> vegan::diversity(, index = "shannon") |> as.vector(),
dataset = "ISALA (vag. swabs)"
),
tibble(
sample = colnames(LLD),
shannon_index = LLD |> assay("counts") |> t() |> vegan::diversity(, index = "shannon") |> as.vector(),
dataset = "LifeLineDeep (stool)"
)
)
#| fig-height: 4
alpha_diversity |>
ggplot() +
aes(x = shannon_index, fill = dataset) +
geom_histogram(binwidth = 0.05) +
ylab("Number of samples") +
xlab("alpha-diversity\n(Shannon index computed on taxa counts)") +
facet_grid(dataset ~ .) +
scale_fill_manual(values = dataset_colors)
beta_diversity <-
bind_rows(
isala |> assay("rel_ab") |> t() |>
vegan::vegdist(method = "bray") |>
as.matrix() |> as.data.frame() |> rownames_to_column("sample 1") |>
pivot_longer(-"sample 1", names_to = "sample 2", values_to = "BC") |>
mutate(
`sample 1` = `sample 1` |> fct_inorder(),
`sample 2` = `sample 2` |> factor(levels = `sample 1` |> levels())
) |>
filter(as.numeric(`sample 1`) < as.numeric(`sample 2`)) |>
mutate(dataset = "ISALA (vag. swabs)"),
LLD |> assay("rel_ab") |> t() |>
vegan::vegdist(method = "bray") |>
as.matrix() |> as.data.frame() |> rownames_to_column("sample 1") |>
pivot_longer(-"sample 1", names_to = "sample 2", values_to = "BC") |>
mutate(
`sample 1` = `sample 1` |> fct_inorder(),
`sample 2` = `sample 2` |> factor(levels = `sample 1` |> levels())
) |>
filter(as.numeric(`sample 1`) < as.numeric(`sample 2`)) |>
mutate(dataset = "LifeLineDeep (stool)")
)
#| fig-height: 4
beta_diversity |>
ggplot() +
aes(x = BC, fill = dataset) +
geom_histogram(binwidth = 0.05) +
ylab("Number of pairs") +
xlab("beta-diversity\n(Pairwise Bray-Curtis dissimilarities computed on taxa relative abundances)") +
facet_grid(dataset ~ .) +
scale_fill_manual(values = dataset_colors)
#| fig-height: 6.5
#| fig-width: 6
isala |>
mia::makePhyloseqFromTreeSE() |>
microViz::tax_transform("compositional", rank = "genus") |>
microViz::comp_heatmap(sample_ser_dist = "bray", tax_ser_dist = "jaccard")
#| fig-height: 6.5
#| fig-width: 6
LLD |>
mia::makePhyloseqFromTreeSE() |>
microViz::tax_fix() |>
microViz::tax_transform("compositional", rank = "family") |>
microViz::comp_heatmap(sample_ser_dist = "bray", tax_ser_dist = "jaccard")
# isala |>
#   as_tibble() |>
#   ggplot() +
#   aes(x = .sample, y = .feature, alpha = rel_ab) +
#   geom_tile(fill = dataset_colors[1]) +
#   scale_alpha("Rel. abundance", range = c(0, 1)) +
#   scale_x_discrete("Sample", breaks = NULL) +
#   ylab("")
# LLD |>
#   as_tibble() |>
#   ggplot() +
#   aes(x = .sample, y = .feature, alpha = rel_ab) +
#   geom_tile(fill = dataset_colors[2]) +
#   scale_alpha("Rel. abundance", range = c(0, 1)) +
#   scale_x_discrete("Sample", breaks = NULL) +
#   ylab("")
isala |>
mia::makePhyloseqFromTreeSE() |>
mia::addLDA()
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("mia")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("mia", force = TRUE)
library(mia)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# The following initializes usage of Bioc devel
BiocManager::install(version='devel')
sessionInfo()
